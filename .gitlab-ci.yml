image: "rust:latest"

test:
  stage: test
  script:
    # ツールのインストール
    - rustup toolchain install "$RUST_VERSION" --component rustfmt clippy
    - rustup install nightly
    - rustup default "$RUST_VERSION"
    # キャッシュの設定
    - if [ "${DISABLE_CACHE:-false}" = "false" ]; then
    -     export CARGO_HOME="$CI_PROJECT_DIR/cargo"
    -     mkdir -p $CARGO_HOME target_cache
    -     ln -s /usr/local/cargo/bin $CARGO_HOME/bin
    -     ln -s /usr/local/cargo/env $CARGO_HOME/env
    -     ln -s target_cache target
    - fi
    # 現在のversionの表示
    - rustup --version && cargo --version
    # Cargo.lock の更新
    - if [ "${USE_MINIMAL_VERSIONS:-false}" = "false" ]; then
    -     time cargo +nightly update
    - else
    -     time cargo +nightly update -Z minimal-versions
    - fi
    - cargo fetch # ソースコードのダウンロード
    - cargo fmt --all --check --verbose # フォーマットチェック
    - cargo clippy --workspace --all-targets $FEATURES -- -D warnings
    # テストを実行し結果をJUnit形式で出力
    - cargo test --lib --workspace $FEATURES -- -Z unstable-options --format=junit --report-time > lib.xml
    - cargo test --doc --workspace $FEATURES -- -Z unstable-options --format=junit --report-time > doc.xml
  cache:
    - key: "crates.io"
      paths:
        - cargo/bin/
        - cargo/registry/index/
        - cargo/registry/cache/
        - cargo/git/db/
    - key: "target"
      paths:
        - target_cache/
  artifacts:
    when: always
    paths:
      - lib.xml
      - doc.xml
    reports:
      junit:
        - lib.xml
        - doc.xml
  variables:
    CARGO_UNSTABLE_SPARSE_REGISTRY: "true"
    CARGO_LOG: "cargo::sources::registry::http_remote=debug"
  parallel:
    matrix:
      - RUST_VERSION:
        - "stable"
        - "beta"
        - "nightly"
        - "1.65.0" # MSRV
        USE_MINIMAL_VERSIONS:
        - "false"
        - "true"
        FEATURES:
        - "--no-default-features"
        - "--no-default-features --features num-bigint"
        - "--no-default-features --features rug"
        - "--all-features"
